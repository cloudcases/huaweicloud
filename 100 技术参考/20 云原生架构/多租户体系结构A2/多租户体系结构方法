# 多租户体系结构方法

- 项目
- 2022/03/19

可以通过多种不同的方法在 Azure 中设计和构建多租户解决方案。 在一个极端情况下，你可以在每个租户之间共享解决方案中的每个资源。 在另一种极端情况下，可以为每个租户部署隔离的资源。 为每个租户部署不同的资源可能看起来很简单，并且它可用于少量租户。 不过，它通常不会提供成本效益，而且可能会很难管理资源。 这种极端情况下还有多种方法，它们都具有折衷：缩放、隔离、成本效益、性能、实现复杂性和可管理性。

在本部分中，我们将讨论构成解决方案的 Azure 服务的主要类别，包括 [计算](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/approaches/compute)、 [存储和数据](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/approaches/storage-data)、 [网络](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/approaches/networking)、 [部署](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/approaches/deployment-configuration)、 [消息传递](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/approaches/messaging)、 [人工智能和机器学习](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/approaches/ai-ml)。 即将推出，我们还将提供标识和 IoT 指导。 对于每个类别，我们概述了在设计多租户解决方案时可以考虑的关键模式和方法，并概述了一些需要避免的对立模式。

## 部署戳模式

[部署戳记模式](https://docs.microsoft.com/zh-cn/azure/architecture/patterns/deployment-stamp)在多租户解决方案中经常使用。 它涉及为租户或一组租户部署专用的基础结构。 单个戳记可能包含多个租户，或者可能专用于单个租户。

![Diagram showing the Deployment Stamps pattern. Each tenant has their own stamp containing a database.](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/approaches/media/overview/deployment-stamps.png)

使用单租户戳记时，部署戳记模式往往非常简单，因为每个标记可能不知道任何其他标记，因此不需要将多租户逻辑或功能内置到应用程序层中。 当每个租户都有自己的专用标记时，此模式提供最大程度的隔离，并减轻干扰性的 [邻居问题](https://docs.microsoft.com/zh-cn/azure/architecture/antipatterns/noisy-neighbor/)。 它还为租户提供了一个选项，可根据自己的要求对其进行配置或自定义，例如要位于特定地缘政治区域或具有特定的高可用性要求。

使用多租户戳记时，需要考虑使用其他模式来管理戳记中的多租户，并且仍可能会出现干扰性的邻居问题。 但是，通过使用部署戳记模式，你可以在解决方案增长时继续扩展。

部署戳记模式的最大问题是用于提供单个租户，这往往是基础结构的成本。 使用单租户戳记时，每个 stamp 都需要有自己的单独的基础结构集，而不会与其他租户共享。 还需要确保为戳记部署的资源足以满足该租户工作负荷的峰值负载。 确保 [定价模型](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/considerations/pricing-models) 抵消了租户基础结构部署成本。

当你有少量租户时，单租户戳记通常可以正常工作。 随着租户数量的增长，管理一群标记可能会越来越困难 ([参阅此案例研究作为](https://devblogs.microsoft.com/azure-sql/running-1m-databases-on-azure-sql-for-a-large-saas-provider-microsoft-dynamics-365-and-power-platform)) 的示例。 还可以应用部署戳记模式来创建多租户标记，这可以为资源和成本共享提供好处。

若要实现部署戳记模式，使用自动部署方法非常重要。 根据你的部署策略，你可能会考虑使用声明性基础结构作为代码（如 Bicep、ARM 模板或 Terraform 模板）来管理你的部署管道中的戳记。 或者，你可以考虑生成自定义代码来部署和管理每个 stamp，如使用 [Azure sdk](https://azure.microsoft.com/downloads)。

## 目标受众

本部分中的页面旨在帮助解决方案架构师和多租户应用程序的开发人员开发人员，包括独立的软件供应商 (Isv) 并启动开发 SaaS 解决方案。 本部分中的大部分指导是通用的，适用于一种类别中的多个 Azure 服务。

## 后续步骤

建议在查看有关特定类别的 Azure 服务的指南之前，查看多 [租户解决方案中资源组织的方法](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/approaches/resource-organization) 。

------

## 建议的内容

- [多租户解决方案的体系结构注意事项 - Azure Architecture Center](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/considerations/overview)

  本文介绍了在规划多租户体系结构时需要考虑的注意事项。

- [多租户的相关资源 - Azure Architecture Center](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/related-resources)

  本文为多租户解决方案的架构师和开发人员提供了一组链接和资源。

- [Azure 上的 SaaS 数字业务旅程 - Azure Architecture Center](https://docs.microsoft.com/zh-cn/azure/architecture/guide/saas/saas-digital-business-journey-azure)

  构建软件即服务 (Saas) 。 有一些链接可帮助你：Azure 入门;生成、部署和发布应用;并构建受众。

- [多租户解决方案中的租户生命周期注意事项 - Azure Architecture Center](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/considerations/tenant-lifecycle)

  本文介绍租户生命周期的不同阶段，以及每个阶段的注意事项。

显示更多

本文内容[部署戳模式](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/approaches/overview#deployment-stamps-pattern)[目标受众](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/approaches/overview#intended-audience)[后续步骤](https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/approaches/overview#next-steps)

[中文 (简体)](https://docs.microsoft.com/zh-cn/locale?target=https://docs.microsoft.com/zh-cn/azure/architecture/guide/multitenant/approaches/overview)

主题

- 管理 Cookie
- [旧](https://docs.microsoft.com/zh-cn/previous-versions/)